// Code generated by protoc-gen-go-govmomi-bridge. DO NOT EDIT.

package v1

import (
	"errors"
	vmomiTypes "github.com/vmware/govmomi/vim25/types"
)

var ErrEnumUndefined = errors.New("enum undefined or unspecified")

// NewPointer returns a pointer to the given value.
func NewPointer[T any](v T) *T {
	return &v
}

// Enum is the interface that all enums must implement.
type Enum interface {
	FromGovmomi(string)
}

// ToGovmomi converts the enum to the govmomi type, return ErrEnumUndefined if the conversion fails
func (x *PropertyChangeOp) ToGovmomi() (*vmomiTypes.PropertyChangeOp, error) {
	switch *x {
	case PropertyChangeOp_PropertyChangeOpAdd:
		return NewPointer(vmomiTypes.PropertyChangeOpAdd), nil
	case PropertyChangeOp_PropertyChangeOpRemove:
		return NewPointer(vmomiTypes.PropertyChangeOpRemove), nil
	case PropertyChangeOp_PropertyChangeOpAssign:
		return NewPointer(vmomiTypes.PropertyChangeOpAssign), nil
	case PropertyChangeOp_PropertyChangeOpIndirectRemove:
		return NewPointer(vmomiTypes.PropertyChangeOpIndirectRemove), nil
	default:
		return nil, ErrEnumUndefined
	}
}

// MustToGovmomi converts the enum to the govmomi type, panic if the conversion fails
func (x *PropertyChangeOp) MustToGovmomi() *vmomiTypes.PropertyChangeOp {
	v, err := x.ToGovmomi()
	if err != nil {
		return nil
	}
	return v
}

// FromGovmomi converts the govmomi type to the enum,
func (x *PropertyChangeOp) FromGovmomi(v string) {
	switch vmomiTypes.PropertyChangeOp(v) {
	case vmomiTypes.PropertyChangeOpAdd:
		*x = PropertyChangeOp_PropertyChangeOpAdd
	case vmomiTypes.PropertyChangeOpRemove:
		*x = PropertyChangeOp_PropertyChangeOpRemove
	case vmomiTypes.PropertyChangeOpAssign:
		*x = PropertyChangeOp_PropertyChangeOpAssign
	case vmomiTypes.PropertyChangeOpIndirectRemove:
		*x = PropertyChangeOp_PropertyChangeOpIndirectRemove
	default:
	}
}

func (x PropertyChangeOp) ToPointer() *PropertyChangeOp {
	return NewPointer(x)
}
